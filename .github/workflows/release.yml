name: Build and Release Binaries

on:
  push:
    branches:
      - main  # Change to your default branch if different

permissions:
  contents: write  # needed to create/update GitHub Releases

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            name: linux-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            name: macos-x64
          - os: macos-latest
            target: aarch64-apple-darwin
            name: macos-arm64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            name: windows-x64

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Build release
        run: cargo build --release --target ${{ matrix.target }}

      - name: Package binary
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            cp target/${{ matrix.target }}/release/mtls-debug-server.exe mtls-debug-server-${{ matrix.name }}.exe
            echo "artifact=mtls-debug-server-${{ matrix.name }}.exe" >> $GITHUB_ENV
          else
            cp target/${{ matrix.target }}/release/mtls-debug-server mtls-debug-server-${{ matrix.name }}
            chmod +x mtls-debug-server-${{ matrix.name }}
            echo "artifact=mtls-debug-server-${{ matrix.name }}" >> $GITHUB_ENV
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: mtls-debug-server-${{ matrix.name }}
          path: ${{ env.artifact }}

  publish:
    name: Publish Nightly Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -al dist

      - name: Create/Update Nightly Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: nightly
          name: Nightly build
          body: |
            Automated nightly build for commit ${{ github.sha }} on ${{ github.ref }}.
            Contains cross-platform binaries.
          prerelease: true
          draft: false
          files: |
            dist/mtls-debug-server-*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
